-- 测试文件目录
set testPath to "/Users/yoyo/Desktop/ios/project/Philm/Philm/PLClasses/PLEditVideoModule/views/PLFilterListView/"
set filePath to  testPath as POSIX file
 
foramtFile(filePath)
--  格式目标文件
on foramtFile(filePath)
-- clang-format 工具目录
set clangformat to "$HOME" & "clang-format "
set clangStyle to " -i"
-- .clang-format 文件目录
set shellString to "-assume-filename="& "$HOME" &"/.clang-format "

set fileList to traversalFile(filePath)
tell application "System Event"
 repeat with path in fileList    
    tell me to do shell script clangformat & shellString & path & clangStyle
 end repeat
end tell
return true
end foramtFile

on isDirectory(filePosixPath)
    set diskPath to POSIX path of filePosixPath
    set fileType to (do shell script "file -b " & diskPath)
    set typeString to  fileType as string
    if typeString ends with "directory" then return true
    return false
end isDirectory
-- 遍历文件
on traversalFile(filePosixPath)
    set fileList to {}
    if (not isDirectory(filePosixPath)) then
        set filePath to POSIX path of  filePosixPath
        if isCanFormatFile(filePath) then
            set the end of fileList to filePath
        end if
    else
    -- 文件夹 遍历文件夹中所有符合要求的文件
        set  _item to (alias (filePosixPath))
        set _list to list folder _item without invisibles
        repeat with path in _list
            set dir to POSIX path of filePosixPath 
            set filePath to dir & path
            set posixFilePath to filePath as POSIX file
            if (not isDirectory(posixFilePath))
                if isCanFormatFile(filePath) then
                    set the end of fileList to filePath
                end if
             end if
        end repeat
    end if
    return fileList
end traversalFile

-- 检验文件是否数组的格式
on isCanFormatFile(filePath)
set formatArray to {".h",".m",".java",".cs",".cpp",".mm",".c"}
 repeat with formatString in formatArray
    if filePath ends with  formatString then
        return true
    end if
 end repeat
return false
end isCanFormatFile
