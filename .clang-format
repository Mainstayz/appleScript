---
# 文档说明 http://clang.llvm.org/docs/ClangFormatStyleOptions.html
# githug https://github.com/travisjeffery/ClangFormat-Xcode
Language:        Cpp
#BasedOnStyle:  YOYO

#The extra indent or outdent of access modifiers, e.g. public:.
AccessModifierOffset: -1

#If true, horizontally aligns arguments after an open bracket.
AlignAfterOpenBracket: true

#If true, aligns escaped newlines as far left as possible. Otherwise puts them into the right-most column.
AlignEscapedNewlinesLeft: true

#If true, horizontally align operands of binary and ternary expressions.
AlignOperands:   true

#If true, aligns trailing comments.
AlignTrailingComments: true

#Allow putting all parameters of a function declaration onto the next line even if BinPackParameters is false.
AllowAllParametersOfDeclarationOnNextLine: true

#Allows contracting simple braced statements to a single line.
AllowShortBlocksOnASingleLine: false

#If true, short case labels will be contracted to a single line.
AllowShortCaseLabelsOnASingleLine: false

#If true, if (a) return; can be put on a single line.
AllowShortIfStatementsOnASingleLine: true

#If true, while (true) continue; can be put on a single line.
AllowShortLoopsOnASingleLine: true

#Dependent on the value, int f() { return 0; } can be put on a single line.
AllowShortFunctionsOnASingleLine: All

#If true, always break after function definition return types.
AlwaysBreakAfterDefinitionReturnType: false

#If true, always break after the template<...> of a template declaration.
AlwaysBreakTemplateDeclarations: true

#If true, always break before multiline string literals.
AlwaysBreakBeforeMultilineStrings: true

#The way to wrap binary operators.
BreakBeforeBinaryOperators: None

#If true, ternary operators will be placed after line breaks.
BreakBeforeTernaryOperators: true

#Always break constructor initializers before commas and align the commas with the colon.
BreakConstructorInitializersBeforeComma: false

#If false, a function declaration’s or function definition’s parameters will either all be on the same line or will have one line each.
BinPackParameters: true

#If false, a function call’s arguments will either be all on the same line or will have one line each.
BinPackArguments: true

#The column limit.
ColumnLimit:     120

#If the constructor initializers don’t fit on a line, put each initializer on its own line.
ConstructorInitializerAllOnOneLineOrOnePerLine: true

#The number of characters to use for indentation of constructor initializer lists.
ConstructorInitializerIndentWidth: 4

#If true, analyze the formatted file for the most common alignment of & and *. PointerAlignment is then used only as fallback.
DerivePointerAlignment: true

#If true, clang-format detects whether function calls and definitions are formatted with one parameter per line.
ExperimentalAutoDetectBinPacking: false

#Indent case labels one level from the switch statement.
IndentCaseLabels: true

#Indent if a function definition or declaration is wrapped after the type.
IndentWrappedFunctionNames: false

IndentFunctionDeclarationAfterType: false

#The maximum number of consecutive empty lines to keep.
MaxEmptyLinesToKeep: 1

#If true, empty lines at the start of blocks are kept.
KeepEmptyLinesAtTheStartOfBlocks: false

#The indentation used for namespaces.
NamespaceIndentation: None

#The number of characters to use for indentation of ObjC blocks.
ObjCBlockIndentWidth: 4

#Add a space after @property in Objective-C, i.e. use \@property (readonly) instead of \@property(readonly).
ObjCSpaceAfterProperty: false

#Add a space in front of an Objective-C protocol list, i.e. use Foo <Protocol> instead of Foo<Protocol>.
ObjCSpaceBeforeProtocolList: false

#The penalty for breaking a function call after “call(”.
PenaltyBreakBeforeFirstCallParameter: 1

#The penalty for each line break introduced inside a comment.
PenaltyBreakComment: 300

#The penalty for each line break introduced inside a string literal.
PenaltyBreakString: 1000

#The penalty for breaking before the first <<.
PenaltyBreakFirstLessLess: 120

#The penalty for each character outside of the column limit.
PenaltyExcessCharacter: 1000000

#Penalty for putting the return type of a function onto its own line.
PenaltyReturnTypeOnItsOwnLine: 200

#Pointer and reference alignment style.
PointerAlignment: Left

#The number of spaces before trailing line comments (// - comments).
SpacesBeforeTrailingComments: 2

Cpp11BracedListStyle: true

#Format compatible with this standard, e.g. use A<A<int> > instead of A<A<int>> for LS_Cpp03.
Standard:        Auto

#The number of columns to use for indentation.
IndentWidth:     4

#The number of columns used for tab stops.
TabWidth:        4

#The way to use tab characters in the resulting file.
UseTab:          Never

#The brace breaking style to use.
BreakBeforeBraces: Allman

#If true, spaces will be inserted after ‘(‘ and before ‘)’.
SpacesInParentheses: false

#If true, spaces will be inserted after ‘[‘ and before ‘]’.
SpacesInSquareBrackets: false

#If true, spaces will be inserted after ‘<’ and before ‘>’ in template argument lists
SpacesInAngles:  false

#If true, spaces will be inserted after ‘(‘ and before ‘)’.
SpaceInEmptyParentheses: false

#If true, spaces may be inserted into C style casts.
SpacesInCStyleCastParentheses: false

#If true, a space may be inserted after C style casts.
SpaceAfterCStyleCast: false

#If true, spaces are inserted inside container literals (e.g. ObjC and Javascript array and dict literals).
SpacesInContainerLiterals: true

#If false, spaces will be removed before assignment operators.
SpaceBeforeAssignmentOperators: true

#Indent width for line continuations.
ContinuationIndentWidth: 4

#A regular expression that describes comments with special meaning, which should not be split into lines or otherwise changed.
CommentPragmas:  '^ IWYU pragma:'

#A vector of macros that should be interpreted as foreach loops instead of as function calls.
ForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]

#Defines in which cases to put a space before opening parentheses.
SpaceBeforeParens: ControlStatements

#Disables formatting at all.
DisableFormat:   false
#add by ak  If true, clang-format will sort #includes.
SortIncludes:   false
